# ============================================================================
# Backend Environment Configuration
# ============================================================================
# Copy this file to .env for local development
# For production, set these in your hosting platform (Railway, Render, etc.)

# ============================================================================
# Database Configuration (PostgreSQL via Kysely)
# ============================================================================
# Connect to Supabase PostgreSQL for runtime queries
# Get these from Supabase Dashboard → Settings → Database

POSTGRES_HOST=localhost
POSTGRES_PORT=54322
POSTGRES_DATABASE=postgres
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres

# ============================================================================
# Authentication (Stytch) - Dual Project Configuration
# ============================================================================
# Create two separate B2B projects in Stytch Dashboard: https://stytch.com/dashboard
# One for SMB platform, one for Investor platform

# SMB Stytch Project
# 1. Create B2B project named "Orbbit SMB"
# 2. Navigate to API Keys section
# 3. Copy Project ID (starts with "project-test-" or "project-live-")
# 4. Copy Secret (starts with "secret-test-" or "secret-live-")
STYTCH_SMB_PROJECT_ID=project-test-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
STYTCH_SMB_SECRET=secret-test-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# Investor Stytch Project
# 1. Create another B2B project named "Orbbit Investor"
# 2. Navigate to API Keys section
# 3. Copy Project ID and Secret
STYTCH_INVESTOR_PROJECT_ID=project-test-yyyyyyyy-yyyy-yyyy-yyyy-yyyyyyyyyyyy
STYTCH_INVESTOR_SECRET=secret-test-yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy

# Session Configuration (applies to both projects)
SESSION_DURATION_MINUTES=1440  # 24 hours (default)

# ============================================================================
# Server Configuration
# ============================================================================

# Port for NestJS backend
PORT=9000

# Node environment
NODE_ENV=development

# ============================================================================
# Coinbase CDP (Optional - for backend SDK usage)
# ============================================================================
# Only needed if backend directly interacts with CDP SDK
# Get from: https://portal.cdp.coinbase.com/

CDP_API_KEY_NAME=
CDP_API_KEY_PRIVATE_KEY=

# ============================================================================
# Block Explorer API Key (for contract verification/deployment)
# ============================================================================
# Get a free API key from: https://etherscan.io/myapikey
# This single key works for all Etherscan-supported networks:
#   - Ethereum Mainnet/Sepolia (etherscan.io)
#   - Base Mainnet/Sepolia (basescan.org)
#   - Optimism, Arbitrum, Polygon, and more

ETHERSCAN_API_KEY=
