/* tslint:disable */
/* eslint-disable */
/**
 * Orbbit Backend API
 * Orbbit Web3 Invoice Financing Platform - Backend API Documentation  Serves offchain data for SMB and Investor frontend applications.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DocumentDto
 */
export interface DocumentDto {
    /**
     * 
     * @type {string}
     * @memberof DocumentDto
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentDto
     */
    documentType: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentDto
     */
    fileName: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentDto
     */
    fileUrl: string;
    /**
     * 
     * @type {number}
     * @memberof DocumentDto
     */
    fileSizeBytes: number;
}

/**
 * Check if a given object implements the DocumentDto interface.
 */
export function instanceOfDocumentDto(value: object): value is DocumentDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('documentType' in value) || value['documentType'] === undefined) return false;
    if (!('fileName' in value) || value['fileName'] === undefined) return false;
    if (!('fileUrl' in value) || value['fileUrl'] === undefined) return false;
    if (!('fileSizeBytes' in value) || value['fileSizeBytes'] === undefined) return false;
    return true;
}

export function DocumentDtoFromJSON(json: any): DocumentDto {
    return DocumentDtoFromJSONTyped(json, false);
}

export function DocumentDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'documentType': json['documentType'],
        'fileName': json['fileName'],
        'fileUrl': json['fileUrl'],
        'fileSizeBytes': json['fileSizeBytes'],
    };
}

export function DocumentDtoToJSON(json: any): DocumentDto {
    return DocumentDtoToJSONTyped(json, false);
}

export function DocumentDtoToJSONTyped(value?: DocumentDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'documentType': value['documentType'],
        'fileName': value['fileName'],
        'fileUrl': value['fileUrl'],
        'fileSizeBytes': value['fileSizeBytes'],
    };
}

