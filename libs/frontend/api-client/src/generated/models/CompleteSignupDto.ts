/* tslint:disable */
/* eslint-disable */
/**
 * Orbbit Backend API
 * Orbbit Web3 Invoice Financing Platform - Backend API Documentation  Serves offchain data for SMB and Investor frontend applications.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CompleteSignupDto
 */
export interface CompleteSignupDto {
    /**
     * Intermediate session token from OTP authentication
     * @type {string}
     * @memberof CompleteSignupDto
     */
    intermediateSessionToken: string;
    /**
     * Organization name
     * @type {string}
     * @memberof CompleteSignupDto
     */
    organizationName: string;
    /**
     * User given name
     * @type {string}
     * @memberof CompleteSignupDto
     */
    givenName: string;
    /**
     * User family name
     * @type {string}
     * @memberof CompleteSignupDto
     */
    familyName: string;
}

/**
 * Check if a given object implements the CompleteSignupDto interface.
 */
export function instanceOfCompleteSignupDto(value: object): value is CompleteSignupDto {
    if (!('intermediateSessionToken' in value) || value['intermediateSessionToken'] === undefined) return false;
    if (!('organizationName' in value) || value['organizationName'] === undefined) return false;
    if (!('givenName' in value) || value['givenName'] === undefined) return false;
    if (!('familyName' in value) || value['familyName'] === undefined) return false;
    return true;
}

export function CompleteSignupDtoFromJSON(json: any): CompleteSignupDto {
    return CompleteSignupDtoFromJSONTyped(json, false);
}

export function CompleteSignupDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CompleteSignupDto {
    if (json == null) {
        return json;
    }
    return {
        
        'intermediateSessionToken': json['intermediateSessionToken'],
        'organizationName': json['organizationName'],
        'givenName': json['givenName'],
        'familyName': json['familyName'],
    };
}

export function CompleteSignupDtoToJSON(json: any): CompleteSignupDto {
    return CompleteSignupDtoToJSONTyped(json, false);
}

export function CompleteSignupDtoToJSONTyped(value?: CompleteSignupDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'intermediateSessionToken': value['intermediateSessionToken'],
        'organizationName': value['organizationName'],
        'givenName': value['givenName'],
        'familyName': value['familyName'],
    };
}

