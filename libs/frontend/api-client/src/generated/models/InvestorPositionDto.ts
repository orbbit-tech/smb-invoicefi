/* tslint:disable */
/* eslint-disable */
/**
 * Orbbit Backend API
 * Orbbit Web3 Invoice Financing Platform - Backend API Documentation  Serves offchain data for SMB and Investor frontend applications.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PositionNftDto } from './PositionNftDto';
import {
    PositionNftDtoFromJSON,
    PositionNftDtoFromJSONTyped,
    PositionNftDtoToJSON,
    PositionNftDtoToJSONTyped,
} from './PositionNftDto';
import type { PositionInvoiceDto } from './PositionInvoiceDto';
import {
    PositionInvoiceDtoFromJSON,
    PositionInvoiceDtoFromJSONTyped,
    PositionInvoiceDtoToJSON,
    PositionInvoiceDtoToJSONTyped,
} from './PositionInvoiceDto';
import type { InvestmentDetailDto } from './InvestmentDetailDto';
import {
    InvestmentDetailDtoFromJSON,
    InvestmentDetailDtoFromJSONTyped,
    InvestmentDetailDtoToJSON,
    InvestmentDetailDtoToJSONTyped,
} from './InvestmentDetailDto';
import type { PositionIssuerDto } from './PositionIssuerDto';
import {
    PositionIssuerDtoFromJSON,
    PositionIssuerDtoFromJSONTyped,
    PositionIssuerDtoToJSON,
    PositionIssuerDtoToJSONTyped,
} from './PositionIssuerDto';
import type { PositionPayerDto } from './PositionPayerDto';
import {
    PositionPayerDtoFromJSON,
    PositionPayerDtoFromJSONTyped,
    PositionPayerDtoToJSON,
    PositionPayerDtoToJSONTyped,
} from './PositionPayerDto';

/**
 * 
 * @export
 * @interface InvestorPositionDto
 */
export interface InvestorPositionDto {
    /**
     * 
     * @type {string}
     * @memberof InvestorPositionDto
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof InvestorPositionDto
     */
    positionStatus: string;
    /**
     * Current value in 6-decimal format
     * @type {number}
     * @memberof InvestorPositionDto
     */
    currentValue: number;
    /**
     * Realized gains in 6-decimal format (if settled)
     * @type {number}
     * @memberof InvestorPositionDto
     */
    realizedGains: number;
    /**
     * Unrealized gains in 6-decimal format (if active)
     * @type {number}
     * @memberof InvestorPositionDto
     */
    unrealizedGains: number;
    /**
     * Return percentage
     * @type {number}
     * @memberof InvestorPositionDto
     */
    returnPct: number;
    /**
     * Actual repayment in 6-decimal format (if settled)
     * @type {number}
     * @memberof InvestorPositionDto
     */
    actualRepayment?: number;
    /**
     * Unix timestamp (if settled)
     * @type {number}
     * @memberof InvestorPositionDto
     */
    settledAt?: number;
    /**
     * 
     * @type {PositionInvoiceDto}
     * @memberof InvestorPositionDto
     */
    invoice: PositionInvoiceDto;
    /**
     * 
     * @type {PositionNftDto}
     * @memberof InvestorPositionDto
     */
    nft: PositionNftDto;
    /**
     * 
     * @type {InvestmentDetailDto}
     * @memberof InvestorPositionDto
     */
    investment: InvestmentDetailDto;
    /**
     * 
     * @type {PositionPayerDto}
     * @memberof InvestorPositionDto
     */
    payer: PositionPayerDto;
    /**
     * 
     * @type {PositionIssuerDto}
     * @memberof InvestorPositionDto
     */
    issuer: PositionIssuerDto;
    /**
     * ISO 8601 date string
     * @type {string}
     * @memberof InvestorPositionDto
     */
    createdAt: string;
}

/**
 * Check if a given object implements the InvestorPositionDto interface.
 */
export function instanceOfInvestorPositionDto(value: object): value is InvestorPositionDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('positionStatus' in value) || value['positionStatus'] === undefined) return false;
    if (!('currentValue' in value) || value['currentValue'] === undefined) return false;
    if (!('realizedGains' in value) || value['realizedGains'] === undefined) return false;
    if (!('unrealizedGains' in value) || value['unrealizedGains'] === undefined) return false;
    if (!('returnPct' in value) || value['returnPct'] === undefined) return false;
    if (!('invoice' in value) || value['invoice'] === undefined) return false;
    if (!('nft' in value) || value['nft'] === undefined) return false;
    if (!('investment' in value) || value['investment'] === undefined) return false;
    if (!('payer' in value) || value['payer'] === undefined) return false;
    if (!('issuer' in value) || value['issuer'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    return true;
}

export function InvestorPositionDtoFromJSON(json: any): InvestorPositionDto {
    return InvestorPositionDtoFromJSONTyped(json, false);
}

export function InvestorPositionDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): InvestorPositionDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'positionStatus': json['positionStatus'],
        'currentValue': json['currentValue'],
        'realizedGains': json['realizedGains'],
        'unrealizedGains': json['unrealizedGains'],
        'returnPct': json['returnPct'],
        'actualRepayment': json['actualRepayment'] == null ? undefined : json['actualRepayment'],
        'settledAt': json['settledAt'] == null ? undefined : json['settledAt'],
        'invoice': PositionInvoiceDtoFromJSON(json['invoice']),
        'nft': PositionNftDtoFromJSON(json['nft']),
        'investment': InvestmentDetailDtoFromJSON(json['investment']),
        'payer': PositionPayerDtoFromJSON(json['payer']),
        'issuer': PositionIssuerDtoFromJSON(json['issuer']),
        'createdAt': json['createdAt'],
    };
}

export function InvestorPositionDtoToJSON(json: any): InvestorPositionDto {
    return InvestorPositionDtoToJSONTyped(json, false);
}

export function InvestorPositionDtoToJSONTyped(value?: InvestorPositionDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'positionStatus': value['positionStatus'],
        'currentValue': value['currentValue'],
        'realizedGains': value['realizedGains'],
        'unrealizedGains': value['unrealizedGains'],
        'returnPct': value['returnPct'],
        'actualRepayment': value['actualRepayment'],
        'settledAt': value['settledAt'],
        'invoice': PositionInvoiceDtoToJSON(value['invoice']),
        'nft': PositionNftDtoToJSON(value['nft']),
        'investment': InvestmentDetailDtoToJSON(value['investment']),
        'payer': PositionPayerDtoToJSON(value['payer']),
        'issuer': PositionIssuerDtoToJSON(value['issuer']),
        'createdAt': value['createdAt'],
    };
}

