/* tslint:disable */
/* eslint-disable */
/**
 * Orbbit Backend API
 * Orbbit Web3 Invoice Financing Platform - Backend API Documentation  Serves offchain data for SMB and Investor frontend applications.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PortfolioSummaryDto
 */
export interface PortfolioSummaryDto {
    /**
     * Total invested amount in 6-decimal format
     * @type {number}
     * @memberof PortfolioSummaryDto
     */
    totalInvested: number;
    /**
     * Total current value in 6-decimal format
     * @type {number}
     * @memberof PortfolioSummaryDto
     */
    totalCurrentValue: number;
    /**
     * Total realized gains in 6-decimal format
     * @type {number}
     * @memberof PortfolioSummaryDto
     */
    totalRealizedGains: number;
    /**
     * Total unrealized gains in 6-decimal format
     * @type {number}
     * @memberof PortfolioSummaryDto
     */
    totalUnrealizedGains: number;
    /**
     * Overall return percentage
     * @type {number}
     * @memberof PortfolioSummaryDto
     */
    totalReturnPct: number;
    /**
     * Number of active positions
     * @type {number}
     * @memberof PortfolioSummaryDto
     */
    activePositionsCount: number;
    /**
     * Number of settled positions
     * @type {number}
     * @memberof PortfolioSummaryDto
     */
    settledPositionsCount: number;
    /**
     * Number of defaulted positions
     * @type {number}
     * @memberof PortfolioSummaryDto
     */
    defaultedPositionsCount: number;
    /**
     * Average APR across all positions
     * @type {number}
     * @memberof PortfolioSummaryDto
     */
    averageApy: number;
}

/**
 * Check if a given object implements the PortfolioSummaryDto interface.
 */
export function instanceOfPortfolioSummaryDto(value: object): value is PortfolioSummaryDto {
    if (!('totalInvested' in value) || value['totalInvested'] === undefined) return false;
    if (!('totalCurrentValue' in value) || value['totalCurrentValue'] === undefined) return false;
    if (!('totalRealizedGains' in value) || value['totalRealizedGains'] === undefined) return false;
    if (!('totalUnrealizedGains' in value) || value['totalUnrealizedGains'] === undefined) return false;
    if (!('totalReturnPct' in value) || value['totalReturnPct'] === undefined) return false;
    if (!('activePositionsCount' in value) || value['activePositionsCount'] === undefined) return false;
    if (!('settledPositionsCount' in value) || value['settledPositionsCount'] === undefined) return false;
    if (!('defaultedPositionsCount' in value) || value['defaultedPositionsCount'] === undefined) return false;
    if (!('averageApy' in value) || value['averageApy'] === undefined) return false;
    return true;
}

export function PortfolioSummaryDtoFromJSON(json: any): PortfolioSummaryDto {
    return PortfolioSummaryDtoFromJSONTyped(json, false);
}

export function PortfolioSummaryDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PortfolioSummaryDto {
    if (json == null) {
        return json;
    }
    return {
        
        'totalInvested': json['totalInvested'],
        'totalCurrentValue': json['totalCurrentValue'],
        'totalRealizedGains': json['totalRealizedGains'],
        'totalUnrealizedGains': json['totalUnrealizedGains'],
        'totalReturnPct': json['totalReturnPct'],
        'activePositionsCount': json['activePositionsCount'],
        'settledPositionsCount': json['settledPositionsCount'],
        'defaultedPositionsCount': json['defaultedPositionsCount'],
        'averageApy': json['averageApy'],
    };
}

export function PortfolioSummaryDtoToJSON(json: any): PortfolioSummaryDto {
    return PortfolioSummaryDtoToJSONTyped(json, false);
}

export function PortfolioSummaryDtoToJSONTyped(value?: PortfolioSummaryDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'totalInvested': value['totalInvested'],
        'totalCurrentValue': value['totalCurrentValue'],
        'totalRealizedGains': value['totalRealizedGains'],
        'totalUnrealizedGains': value['totalUnrealizedGains'],
        'totalReturnPct': value['totalReturnPct'],
        'activePositionsCount': value['activePositionsCount'],
        'settledPositionsCount': value['settledPositionsCount'],
        'defaultedPositionsCount': value['defaultedPositionsCount'],
        'averageApy': value['averageApy'],
    };
}

