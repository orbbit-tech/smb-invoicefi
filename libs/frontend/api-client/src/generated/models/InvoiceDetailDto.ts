/* tslint:disable */
/* eslint-disable */
/**
 * Orbbit Backend API
 * Orbbit Web3 Invoice Financing Platform - Backend API Documentation  Serves offchain data for SMB and Investor frontend applications.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PayerDto } from './PayerDto';
import {
    PayerDtoFromJSON,
    PayerDtoFromJSONTyped,
    PayerDtoToJSON,
    PayerDtoToJSONTyped,
} from './PayerDto';
import type { InvoiceDocumentDto } from './InvoiceDocumentDto';
import {
    InvoiceDocumentDtoFromJSON,
    InvoiceDocumentDtoFromJSONTyped,
    InvoiceDocumentDtoToJSON,
    InvoiceDocumentDtoToJSONTyped,
} from './InvoiceDocumentDto';
import type { InvoiceStatusHistoryDto } from './InvoiceStatusHistoryDto';
import {
    InvoiceStatusHistoryDtoFromJSON,
    InvoiceStatusHistoryDtoFromJSONTyped,
    InvoiceStatusHistoryDtoToJSON,
    InvoiceStatusHistoryDtoToJSONTyped,
} from './InvoiceStatusHistoryDto';
import type { InvoiceNftDto } from './InvoiceNftDto';
import {
    InvoiceNftDtoFromJSON,
    InvoiceNftDtoFromJSONTyped,
    InvoiceNftDtoToJSON,
    InvoiceNftDtoToJSONTyped,
} from './InvoiceNftDto';

/**
 * 
 * @export
 * @interface InvoiceDetailDto
 */
export interface InvoiceDetailDto {
    /**
     * 
     * @type {string}
     * @memberof InvoiceDetailDto
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof InvoiceDetailDto
     */
    invoiceNumber: string;
    /**
     * Amount in 6-decimal format (e.g., for USDC: 1,000,000 = $1)
     * @type {number}
     * @memberof InvoiceDetailDto
     */
    amount: number;
    /**
     * APR with 6 decimals (e.g., 365,000 = 36.5%, where 1,000,000 = 100%)
     * @type {number}
     * @memberof InvoiceDetailDto
     */
    apr: number;
    /**
     * Discount rate with 6 decimals (e.g., 60,000 = 6%)
     * @type {number}
     * @memberof InvoiceDetailDto
     */
    discountRate: number;
    /**
     * Unix timestamp
     * @type {number}
     * @memberof InvoiceDetailDto
     */
    invoiceDate: number;
    /**
     * Unix timestamp
     * @type {number}
     * @memberof InvoiceDetailDto
     */
    dueAt: number;
    /**
     * 
     * @type {string}
     * @memberof InvoiceDetailDto
     */
    lifecycleStatus: string;
    /**
     * 
     * @type {string}
     * @memberof InvoiceDetailDto
     */
    onChainStatus?: string;
    /**
     * 
     * @type {string}
     * @memberof InvoiceDetailDto
     */
    riskScore?: string;
    /**
     * 
     * @type {PayerDto}
     * @memberof InvoiceDetailDto
     */
    payer: PayerDto;
    /**
     * ISO 8601 date string
     * @type {string}
     * @memberof InvoiceDetailDto
     */
    createdAt: string;
    /**
     * 
     * @type {string}
     * @memberof InvoiceDetailDto
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof InvoiceDetailDto
     */
    metadataUri?: string;
    /**
     * 
     * @type {InvoiceNftDto}
     * @memberof InvoiceDetailDto
     */
    nft?: InvoiceNftDto;
    /**
     * 
     * @type {Array<InvoiceDocumentDto>}
     * @memberof InvoiceDetailDto
     */
    documents: Array<InvoiceDocumentDto>;
    /**
     * 
     * @type {Array<InvoiceStatusHistoryDto>}
     * @memberof InvoiceDetailDto
     */
    statusHistory: Array<InvoiceStatusHistoryDto>;
}

/**
 * Check if a given object implements the InvoiceDetailDto interface.
 */
export function instanceOfInvoiceDetailDto(value: object): value is InvoiceDetailDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('invoiceNumber' in value) || value['invoiceNumber'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('apr' in value) || value['apr'] === undefined) return false;
    if (!('discountRate' in value) || value['discountRate'] === undefined) return false;
    if (!('invoiceDate' in value) || value['invoiceDate'] === undefined) return false;
    if (!('dueAt' in value) || value['dueAt'] === undefined) return false;
    if (!('lifecycleStatus' in value) || value['lifecycleStatus'] === undefined) return false;
    if (!('payer' in value) || value['payer'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('documents' in value) || value['documents'] === undefined) return false;
    if (!('statusHistory' in value) || value['statusHistory'] === undefined) return false;
    return true;
}

export function InvoiceDetailDtoFromJSON(json: any): InvoiceDetailDto {
    return InvoiceDetailDtoFromJSONTyped(json, false);
}

export function InvoiceDetailDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): InvoiceDetailDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'invoiceNumber': json['invoiceNumber'],
        'amount': json['amount'],
        'apr': json['apr'],
        'discountRate': json['discountRate'],
        'invoiceDate': json['invoiceDate'],
        'dueAt': json['dueAt'],
        'lifecycleStatus': json['lifecycleStatus'],
        'onChainStatus': json['onChainStatus'] == null ? undefined : json['onChainStatus'],
        'riskScore': json['riskScore'] == null ? undefined : json['riskScore'],
        'payer': PayerDtoFromJSON(json['payer']),
        'createdAt': json['createdAt'],
        'description': json['description'] == null ? undefined : json['description'],
        'metadataUri': json['metadataUri'] == null ? undefined : json['metadataUri'],
        'nft': json['nft'] == null ? undefined : InvoiceNftDtoFromJSON(json['nft']),
        'documents': ((json['documents'] as Array<any>).map(InvoiceDocumentDtoFromJSON)),
        'statusHistory': ((json['statusHistory'] as Array<any>).map(InvoiceStatusHistoryDtoFromJSON)),
    };
}

export function InvoiceDetailDtoToJSON(json: any): InvoiceDetailDto {
    return InvoiceDetailDtoToJSONTyped(json, false);
}

export function InvoiceDetailDtoToJSONTyped(value?: InvoiceDetailDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'invoiceNumber': value['invoiceNumber'],
        'amount': value['amount'],
        'apr': value['apr'],
        'discountRate': value['discountRate'],
        'invoiceDate': value['invoiceDate'],
        'dueAt': value['dueAt'],
        'lifecycleStatus': value['lifecycleStatus'],
        'onChainStatus': value['onChainStatus'],
        'riskScore': value['riskScore'],
        'payer': PayerDtoToJSON(value['payer']),
        'createdAt': value['createdAt'],
        'description': value['description'],
        'metadataUri': value['metadataUri'],
        'nft': InvoiceNftDtoToJSON(value['nft']),
        'documents': ((value['documents'] as Array<any>).map(InvoiceDocumentDtoToJSON)),
        'statusHistory': ((value['statusHistory'] as Array<any>).map(InvoiceStatusHistoryDtoToJSON)),
    };
}

