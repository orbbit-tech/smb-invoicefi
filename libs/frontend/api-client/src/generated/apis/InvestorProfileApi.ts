/* tslint:disable */
/* eslint-disable */
/**
 * Orbbit Backend API
 * Orbbit Web3 Invoice Financing Platform - Backend API Documentation  Serves offchain data for SMB and Investor frontend applications.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  UserProfileDto,
} from '../models/index';
import {
    UserProfileDtoFromJSON,
    UserProfileDtoToJSON,
} from '../models/index';

export interface GetProfileRequest {
    userId: string;
}

/**
 * InvestorProfileApi - interface
 * 
 * @export
 * @interface InvestorProfileApiInterface
 */
export interface InvestorProfileApiInterface {
    /**
     * Retrieve investor profile information including KYC status and whitelisting
     * @summary Get user profile
     * @param {string} userId 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InvestorProfileApiInterface
     */
    getProfileRaw(requestParameters: GetProfileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserProfileDto>>;

    /**
     * Retrieve investor profile information including KYC status and whitelisting
     * Get user profile
     */
    getProfile(userId: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserProfileDto>;

}

/**
 * 
 */
export class InvestorProfileApi extends runtime.BaseAPI implements InvestorProfileApiInterface {

    /**
     * Retrieve investor profile information including KYC status and whitelisting
     * Get user profile
     */
    async getProfileRaw(requestParameters: GetProfileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserProfileDto>> {
        if (requestParameters['userId'] == null) {
            throw new runtime.RequiredError(
                'userId',
                'Required parameter "userId" was null or undefined when calling getProfile().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['userId'] != null) {
            queryParameters['userId'] = requestParameters['userId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/v1/investor/profile`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UserProfileDtoFromJSON(jsonValue));
    }

    /**
     * Retrieve investor profile information including KYC status and whitelisting
     * Get user profile
     */
    async getProfile(userId: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserProfileDto> {
        const response = await this.getProfileRaw({ userId: userId }, initOverrides);
        return await response.value();
    }

}
