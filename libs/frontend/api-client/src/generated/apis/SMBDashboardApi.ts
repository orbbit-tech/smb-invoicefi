/* tslint:disable */
/* eslint-disable */
/**
 * Orbbit Backend API
 * Orbbit Web3 Invoice Financing Platform - Backend API Documentation  Serves offchain data for SMB and Investor frontend applications.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  DashboardMetricsDto,
} from '../models/index';
import {
    DashboardMetricsDtoFromJSON,
    DashboardMetricsDtoToJSON,
} from '../models/index';

export interface GetMetricsRequest {
    organizationId?: any;
}

/**
 * SMBDashboardApi - interface
 * 
 * @export
 * @interface SMBDashboardApiInterface
 */
export interface SMBDashboardApiInterface {
    /**
     * Retrieve aggregate metrics for SMB dashboard homepage. Organization ID is extracted from JWT token or query parameter (dev mode).
     * @summary Get dashboard metrics
     * @param {any} [organizationId] Organization ID (optional during development when using @Public())
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SMBDashboardApiInterface
     */
    getMetricsRaw(requestParameters: GetMetricsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DashboardMetricsDto>>;

    /**
     * Retrieve aggregate metrics for SMB dashboard homepage. Organization ID is extracted from JWT token or query parameter (dev mode).
     * Get dashboard metrics
     */
    getMetrics(organizationId?: any, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DashboardMetricsDto>;

}

/**
 * 
 */
export class SMBDashboardApi extends runtime.BaseAPI implements SMBDashboardApiInterface {

    /**
     * Retrieve aggregate metrics for SMB dashboard homepage. Organization ID is extracted from JWT token or query parameter (dev mode).
     * Get dashboard metrics
     */
    async getMetricsRaw(requestParameters: GetMetricsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DashboardMetricsDto>> {
        const queryParameters: any = {};

        if (requestParameters['organizationId'] != null) {
            queryParameters['organizationId'] = requestParameters['organizationId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/v1/smb/dashboard/metrics`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DashboardMetricsDtoFromJSON(jsonValue));
    }

    /**
     * Retrieve aggregate metrics for SMB dashboard homepage. Organization ID is extracted from JWT token or query parameter (dev mode).
     * Get dashboard metrics
     */
    async getMetrics(organizationId?: any, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DashboardMetricsDto> {
        const response = await this.getMetricsRaw({ organizationId: organizationId }, initOverrides);
        return await response.value();
    }

}
